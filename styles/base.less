@import "syntax-variables";

atom-text-editor {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
      &.cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }
}

atom-text-editor .search-results .syntax--marker .region {
  background-color: transparent;
  border: 1px solid @syntax-result-marker-color;
}

atom-text-editor .search-results .syntax--marker.current-result .region {
  border: 1px solid @syntax-result-marker-color-selected;
}

.syntax--comment {
  color: @very-dark-yellow;
}

.syntax--keyword {
  color: @purple;

  &.syntax--control {
    color: @light-purple;
  }

  &.syntax--conditional.syntax--conditional,
  &.syntax--control.syntax--flow {
      color: @bright-orange;
  }

  &.syntax--control.syntax--module {
      color: @orange;
  }

  &.syntax--operator {
    color: @syntax-text-color;
  }

  &.syntax--operator.syntax--assignment,
  &.syntax--operator.syntax--assignment.syntax--jsx {
      color: @orange;
  }

  &.syntax--operator.syntax--logical {
      color: @blue
  }

  &.syntax--other.syntax--special-method {
    color: @blue;
  }

  &.syntax--other.syntax--unit {
    color: @orange;
  }

  &.syntax--other.syntax--using.syntax--cs {
      color: @orange;
  }
}

.syntax--storage {
  color: @purple;
}

.syntax--storage.syntax--type.syntax--class,
.syntax--storage.syntax--type.syntax--class.syntax--jsdoc {
    color: @very-dark-yellow;
}

.syntax--storage.syntax--modifier {
    color: @blue;

    &.syntax--cs {
        color: @light-gray;
    }
}

// .syntax--storage.syntax--type.syntax--cs {
//     color: @light-gray;
// }

.syntax--source.syntax--shell {
    color: @dark-blue-green;
}

.syntax--support {
    &.syntax--class.syntax--builtin {
        color: @light-gray;
    }

    &.syntax--class.syntax--ruby {
        color: @purple;
    }

    &.syntax--component.syntax--open.syntax--jsx,
    &.syntax--component.syntax--close.syntax--jsx {
        color: @blue;
    }
}

.syntax--constant {
  color: @green;

  &.syntax--character.syntax--escape {
    color: @green;
  }

  &.syntax--language.syntax--null {
      color: @light-gray;
  }

  &.syntax--numeric {
    color: @orange;
  }

  &.syntax--other.syntax--color {
    color: @green;
  }

  &.syntax--other.syntax--symbol {
    color: @green;
  }
}

.syntax--variable {
  color: @bright-orange;

  &.syntax--interpolation {
    color: darken(@bright-orange, 10%);
  }

  &.syntax--language.syntax--super.syntax--js {
      color: @green;
      font-weight: 600;
  }

  &.syntax--other.syntax--property {
      color: @light-gray;
  }

  &.syntax--other.syntax--object {
      color: @syntax-text-color;
  }

  &.syntax--other.syntax--readwrite.syntax--js {
      color: @white;
  }

  &.syntax--parameter.syntax--function {
    color: @syntax-text-color;
  }

  &.syntax--this.syntax--js {
      color: @light-purple;
  }

  &.syntax--scss {
      color: @blue;
  }
}

.syntax--invalid.syntax--illegal {
  background-color: @bright-orange;
  color: @syntax-background-color;
}

.syntax--string {
  color: @green;

  &.syntax--quoted.syntax--double.syntax--shell {
      color: @light-gray;
  }

  &.syntax--unquoted {
      color: @bright-orange;
  }

  &.syntax--unquoted.syntax--yaml {
      color: @light-gray;
  }

  &.syntax--regexp {
    color: @green;

    .syntax--source.syntax--ruby.syntax--embedded {
      color: @orange;
    }
  }

  &.syntax--other.syntax--link {
    color: @bright-orange;
  }
}

.syntax--punctuation {
    &.syntax--definition {
        &.syntax--comment {
          color: @very-dark-yellow;
        }

        &.syntax--definition.syntax--method-parameters,
        &.syntax--seperator.syntax--parameter.syntax--cs {
        &.syntax--begin.syntax--cs,
        &.syntax--end.syntax--cs {
            color: @white;
        }
    }

    &.syntax--string,
    &.syntax--variable,
    &.syntax--parameters,
    &.syntax--array {
      color: @syntax-text-color;
    }

    &.syntax--heading,
    &.syntax--identity {
      color: @blue;
    }

    &.syntax--bold {
      color: @white;
      font-weight: bold;
    }

    &.syntax--italic {
      color: @light-purple;
      font-style: italic;
    }

    &.syntax--tag.syntax--jsx {
        color: @light-gray;
    }
  }

  &.syntax--section.syntax--embedded {
    color: darken(@bright-orange, 10%);
  }
}

.syntax--support {
  &.syntax--class {
    color: @white;
  }

  &.syntax--function  {
    color: @green;

    &.syntax--any-method {
      color: @blue;
    }
  }
}

.syntax--entity {
  &.syntax--class {
      color: @light-gray;
  }

  &.syntax--name.syntax--class.syntax--js {
      color: @light-yellow;
  }

  &.syntax--name.syntax--function {
    color: @blue;
  }

  &.syntax--name.syntax--function.syntax--method {
    color: @light-gray;
  }

  &.syntax--name.syntax--tag.syntax--jsx {
      color: @light-gray;
      text-decoration: none;
  }

  &.syntax--name.syntax--type {
    color: @white;
  }

  &.syntax--entity.syntax--name.syntax--type.syntax--class.syntax--cs {
      color: @light-yellow;
  }

  &.syntax--other.syntax--attribute-name.syntax--jsx {
      color: @white;
  }

  &.syntax--other.syntax--inherited-class {
    color: @green;
  }

  &.syntax--name.syntax--class,
  &.syntax--name.syntax--type.syntax--class {
    color: @white;
  }

  &.syntax--name.syntax--section {
    color: @blue;
  }

  &.syntax--name.syntax--tag {
    color: @orange;
    text-decoration: underline;
  }

  &.syntax--name.syntax--tag.syntax--yaml {
    color: @blue;
    text-decoration: none;
  }

  &.syntax--other.syntax--attribute-name {
    color: @orange;

    &.syntax--id {
      color: @blue;
    }
  }
}

.syntax--meta {
  &.syntax--class {
    color: @white;
  }

  &.syntax--link {
    color: @orange;
  }

  // &.syntax--meta.syntax--method-call.syntax--cs {
  //   color: @blue;
  // }

  // &.syntax--method.syntax--cs {
  //   color: @blue;
  // }

  // &.syntax--property.syntax--cs {
  //   color: @gray;
  // }

  &.syntax--require {
    color: @blue;
  }

  &.syntax--selector {
    color: @purple;
  }

  &.syntax--separator {
    background-color: @gray;
    color: @syntax-text-color;
  }
}

.syntax--none {
  color: @syntax-text-color;
}

.syntax--markup {
  &.syntax--bold {
    color: @orange;
    font-weight: bold;
  }

  &.syntax--changed {
    color: @purple;
  }

  &.syntax--deleted {
    color: @bright-orange;
  }

  &.syntax--italic {
    color: @purple;
    font-style: italic;
  }

  &.syntax--heading.syntax--punctuation.syntax--definition.syntax--heading {
    color: @blue;
  }

  &.syntax--inserted {
    color: @green;
  }

  &.syntax--list {
    color: @bright-orange;
  }

  &.syntax--quote {
    color: @orange;
  }

  &.syntax--raw.syntax--inline {
    color: @green;
  }
}

.syntax--source.syntax--gfm.syntax--markup {
  -webkit-font-smoothing: auto;
  &.syntax--heading {
    color: @green;
  }
}

.scroll-view {
    padding-left: 5px;
}

atom-text-editor[mini] .scroll-view {
  padding-left: 1px;
}
